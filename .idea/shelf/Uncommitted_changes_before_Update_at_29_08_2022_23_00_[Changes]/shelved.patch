Index: src/main/java/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>\r\nimport java.awt.Dimension;\r\nimport java.awt.EventQueue;\r\n\r\nimport javax.swing.JFrame;\r\nimport java.awt.FlowLayout;\r\nimport java.awt.GridLayout;\r\nimport java.awt.Image;\r\n\r\nimport javax.swing.BoxLayout;\r\nimport javax.swing.Icon;\r\n\r\nimport java.awt.BorderLayout;\r\nimport javax.swing.JPanel;\r\nimport javax.swing.JSplitPane;\r\nimport javax.swing.JTextArea;\r\nimport javax.swing.JToolBar;\r\nimport javax.swing.JButton;\r\nimport javax.swing.JLabel;\r\nimport javax.swing.JScrollPane;\r\nimport java.awt.Rectangle;\r\nimport java.awt.Component;\r\nimport javax.swing.ImageIcon;\r\nimport java.awt.Font;\r\n\r\npublic class Main {\r\n\r\n    private JFrame frame;\r\n\r\n    /**\r\n     * Launch the application.\r\n     */\r\n    public static void main(String[] args) {\r\n        EventQueue.invokeLater(new Runnable() {\r\n            public void run() {\r\n                try {\r\n                    Main window = new Main();\r\n                    window.frame.setVisible(true);\r\n                } catch (Exception e) {\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * Create the application.\r\n     */\r\n    public Main() {\r\n        initialize();\r\n    }\r\n\r\n    /**\r\n     * Initialize the contents of the frame.\r\n     */\r\n    private void initialize() {\r\n        frame = new JFrame();\r\n        frame.setBounds(100, 100, 910, 600);\r\n        frame.setMinimumSize(new Dimension(910, 600));\r\n        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);\r\n\r\n        JPanel mainPanel = new JPanel();\r\n        frame.getContentPane().add(mainPanel);\r\n        mainPanel.setLayout(new BorderLayout());\r\n\r\n\r\n        JPanel toolBarPanel = new JPanel();\r\n        mainPanel.add(toolBarPanel, BorderLayout.NORTH);\r\n        toolBarPanel.setLayout(new BoxLayout(toolBarPanel, BoxLayout.X_AXIS));\r\n\r\n\r\n        JButton newFileButton = new JButton(\"Novo [ctrl-n]\");\r\n        newFileButton.setFont(new Font(\"Tahoma\", Font.PLAIN, 9));\r\n        newFileButton.setIcon(this.resizeIcon(\"src/img/novo.png\"));\r\n        toolBarPanel.add(newFileButton);\r\n\r\n        JButton openFileButton = new JButton(\"Abrir [ctrl-o]\");\r\n        openFileButton.setFont(new Font(\"Tahoma\", Font.PLAIN, 9));\r\n        openFileButton.setIcon(this.resizeIcon(\"src/img/abrir.png\"));\r\n        toolBarPanel.add(openFileButton);\r\n\r\n        JButton saveFileButton = new JButton(\"Salvas [ctrl-s]\");\r\n        saveFileButton.setFont(new Font(\"Tahoma\", Font.PLAIN, 9));\r\n        saveFileButton.setIcon(this.resizeIcon(\"src/img/salvar.png\"));\r\n        toolBarPanel.add(saveFileButton);\r\n\r\n        JButton copyButton = new JButton(\"Copiar [ctrl-c]\");\r\n        copyButton.setFont(new Font(\"Tahoma\", Font.PLAIN, 9));\r\n        copyButton.setIcon(this.resizeIcon(\"src/img/copiar.png\"));\r\n        toolBarPanel.add(copyButton);\r\n\r\n        JButton pasteButton = new JButton(\"Colar [ctrl-v]\");\r\n        pasteButton.setFont(new Font(\"Tahoma\", Font.PLAIN, 9));\r\n        pasteButton.setIcon(this.resizeIcon(\"src/img/colar.png\"));\r\n        toolBarPanel.add(pasteButton);\r\n\r\n        JButton cutButton = new JButton(\"Recortar [ctrl-x]\");\r\n        cutButton.setFont(new Font(\"Tahoma\", Font.PLAIN, 9));\r\n        cutButton.setIcon(this.resizeIcon(\"src/img/recortar.png\"));\r\n        toolBarPanel.add(cutButton);\r\n\r\n        JButton compileButton = new JButton(\"Compilar [F7]\");\r\n        compileButton.setFont(new Font(\"Tahoma\", Font.PLAIN, 9));\r\n        compileButton.setIcon(this.resizeIcon(\"src/img/compilar.png\"));\r\n        toolBarPanel.add(compileButton);\r\n\r\n        JButton teamButton = new JButton(\"Equipe [F1]\");\r\n        teamButton.setFont(new Font(\"Tahoma\", Font.PLAIN, 9));\r\n        teamButton.setIcon(this.resizeIcon(\"src/img/equipe.png\"));\r\n        toolBarPanel.add(teamButton);\r\n\r\n\r\n\r\n        JSplitPane splitPane = new JSplitPane();\r\n        splitPane.setOrientation(JSplitPane.VERTICAL_SPLIT);\r\n        mainPanel.add(splitPane, BorderLayout.CENTER);\r\n\r\n        JTextArea codeEditorTextArea = new JTextArea();\r\n        codeEditorTextArea.setBorder(new NumberedBorder());\r\n        JScrollPane scrollEditor = new JScrollPane(codeEditorTextArea, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);\r\n        splitPane.setLeftComponent(scrollEditor);\r\n\r\n        JTextArea messageTextArea = new JTextArea();\r\n        JScrollPane scrollmessage = new JScrollPane(messageTextArea, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);\r\n        splitPane.setRightComponent(scrollmessage);\r\n\r\n\r\n\r\n        JPanel statusPanel = new JPanel();\r\n        mainPanel.add(statusPanel, BorderLayout.SOUTH);\r\n        statusPanel.setLayout(new BorderLayout(0, 0));\r\n\r\n        JLabel lblNewLabel = new JLabel(\" \");\r\n        statusPanel.add(lblNewLabel);\r\n\r\n\r\n    }\r\n\r\n    private ImageIcon resizeIcon(String path) {\r\n        ImageIcon imageIcon = new ImageIcon(path);\r\n        Image image = imageIcon.getImage(); // transform it\r\n        Image newimg = image.getScaledInstance(16, 16,  java.awt.Image.SCALE_SMOOTH);\r\n        return new ImageIcon(newimg);\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/Main.java b/src/main/java/Main.java
--- a/src/main/java/Main.java	(revision f0e759f73030b607a6eb38b8909b06da3f3a556a)
+++ b/src/main/java/Main.java	(date 1661818703843)
@@ -1,31 +1,15 @@
 
-import java.awt.Dimension;
-import java.awt.EventQueue;
+import java.awt.*;
 
-import javax.swing.JFrame;
-import java.awt.FlowLayout;
-import java.awt.GridLayout;
-import java.awt.Image;
+import javax.swing.*;
 
-import javax.swing.BoxLayout;
-import javax.swing.Icon;
-
-import java.awt.BorderLayout;
-import javax.swing.JPanel;
-import javax.swing.JSplitPane;
-import javax.swing.JTextArea;
-import javax.swing.JToolBar;
-import javax.swing.JButton;
-import javax.swing.JLabel;
-import javax.swing.JScrollPane;
-import java.awt.Rectangle;
-import java.awt.Component;
-import javax.swing.ImageIcon;
-import java.awt.Font;
+import java.awt.event.*;
+import java.util.Objects;
 
 public class Main {
 
     private JFrame frame;
+    private String copiedText;
 
     /**
      * Launch the application.
@@ -65,6 +49,7 @@
 
 
         JPanel toolBarPanel = new JPanel();
+        toolBarPanel.setMinimumSize(new Dimension(900, 70));
         mainPanel.add(toolBarPanel, BorderLayout.NORTH);
         toolBarPanel.setLayout(new BoxLayout(toolBarPanel, BoxLayout.X_AXIS));
 
@@ -121,12 +106,14 @@
         splitPane.setLeftComponent(scrollEditor);
 
         JTextArea messageTextArea = new JTextArea();
+        messageTextArea.setEnabled(false);
+        messageTextArea.setDisabledTextColor(Color.black);
         JScrollPane scrollmessage = new JScrollPane(messageTextArea, JScrollPane.VERTICAL_SCROLLBAR_ALWAYS, JScrollPane.HORIZONTAL_SCROLLBAR_ALWAYS);
         splitPane.setRightComponent(scrollmessage);
 
 
-
         JPanel statusPanel = new JPanel();
+        statusPanel.setMinimumSize(new Dimension(900, 25));
         mainPanel.add(statusPanel, BorderLayout.SOUTH);
         statusPanel.setLayout(new BorderLayout(0, 0));
 
@@ -134,6 +121,27 @@
         statusPanel.add(lblNewLabel);
 
 
+
+        Action teamAction = new AbstractAction() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                messageTextArea.setText("João Arthur Pereira Alba \nNicole Taufenbach");
+            }
+        };
+        teamButton.addActionListener(teamAction);
+        teamButton.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F1, 0), "teamShortcut");
+        teamButton.getActionMap().put("teamShortcut", teamAction);
+
+
+        Action compileAction = new AbstractAction() {
+            @Override
+            public void actionPerformed(ActionEvent e) {
+                messageTextArea.setText("compilação de programas ainda não foi implementada");
+            }
+        };
+        compileButton.addActionListener(compileAction);
+        compileButton.getInputMap(JComponent.WHEN_IN_FOCUSED_WINDOW).put(KeyStroke.getKeyStroke(KeyEvent.VK_F7, 0), "compileShortcut");
+        compileButton.getActionMap().put("compileShortcut", compileAction);
     }
 
     private ImageIcon resizeIcon(String path) {
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"b0003065-6d6d-46da-9d04-bdd09767643d\" name=\"Changes\" comment=\"\">\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/compiler.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/encodings.xml\" afterDir=\"false\" />\r\n      <change afterPath=\"$PROJECT_DIR$/.idea/jarRepositories.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.gitignore\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/.gitignore\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/vcs.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/vcs.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/pom.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/pom.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/META-INF/maven/archetype.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/archetype-resources/pom.xml\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/archetype-resources/src/main/java/App.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/resources/archetype-resources/src/test/java/AppTest.java\" beforeDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2E0OYbhp76Ld3Ygruimpd5mXVvw\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"SHARE_PROJECT_CONFIGURATION_FILES\": \"true\",\r\n    \"last_opened_file_path\": \"C:/git/compilador/src/img\"\r\n  }\r\n}]]></component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CopyFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\git\\compilador\\src\\img\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\git\\compilador\\src\\main\\java\" />\r\n      <recent name=\"C:\\git\\compilador\\src\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"RunManager\">\r\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\r\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\r\n      <module name=\"compilador\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <recent_temporary>\r\n      <list>\r\n        <item itemvalue=\"Application.Main\" />\r\n      </list>\r\n    </recent_temporary>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"b0003065-6d6d-46da-9d04-bdd09767643d\" name=\"Changes\" comment=\"\" />\r\n      <created>1661729083767</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1661729083767</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision f0e759f73030b607a6eb38b8909b06da3f3a556a)
+++ b/.idea/workspace.xml	(date 1661818164835)
@@ -5,17 +5,10 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="b0003065-6d6d-46da-9d04-bdd09767643d" name="Changes" comment="">
-      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/encodings.xml" afterDir="false" />
-      <change afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.gitignore" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/.gitignore" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/vcs.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/pom.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/META-INF/maven/archetype.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/archetype-resources/pom.xml" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/archetype-resources/src/main/java/App.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/resources/archetype-resources/src/test/java/AppTest.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/Main$1.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Main$1.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/target/classes/Main.class" beforeDir="false" afterPath="$PROJECT_DIR$/target/classes/Main.class" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -39,14 +32,14 @@
   <component name="ProjectViewState">
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true",
-    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
-    "last_opened_file_path": "C:/git/compilador/src/img"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,
+    &quot;last_opened_file_path&quot;: &quot;C:/git/compilador/src/img&quot;
   }
-}]]></component>
+}</component>
   <component name="RecentsManager">
     <key name="CopyFile.RECENT_KEYS">
       <recent name="C:\git\compilador\src\img" />
